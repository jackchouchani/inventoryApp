import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  Dimensions
} from 'react-native';
import {
  Modal,
  Portal,
  Card,
  Button,
  IconButton,
  Chip
} from 'react-native-paper';
import { useAppTheme } from '../hooks/useTheme';

interface ConflictHelpModalProps {
  visible: boolean;
  onDismiss: () => void;
}

export const ConflictHelpModal: React.FC<ConflictHelpModalProps> = ({
  visible,
  onDismiss
}) => {
  const { activeTheme } = useAppTheme();

  const styles = StyleSheet.create({
    modal: {
      margin: 20,
      maxHeight: Dimensions.get('window').height * 0.85,
      maxWidth: 600,
      alignSelf: 'center',
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      padding: 20,
      backgroundColor: activeTheme.primary,
    },
    headerTitle: {
      fontSize: 20,
      fontWeight: 'bold',
      color: activeTheme.text.onPrimary,
      flex: 1,
    },
    content: {
      padding: 20,
      maxHeight: Dimensions.get('window').height * 0.65,
    },
    section: {
      marginBottom: 24,
    },
    sectionTitle: {
      fontSize: 18,
      fontWeight: '600',
      color: activeTheme.primary,
      marginBottom: 12,
    },
    sectionText: {
      fontSize: 16,
      lineHeight: 24,
      color: activeTheme.text.primary,
      marginBottom: 12,
    },
    subTitle: {
      fontSize: 16,
      fontWeight: '600',
      color: activeTheme.text.primary,
      marginTop: 16,
      marginBottom: 8,
    },
    bulletPoint: {
      flexDirection: 'row',
      alignItems: 'flex-start',
      marginBottom: 8,
    },
    bullet: {
      fontSize: 16,
      color: activeTheme.primary,
      marginRight: 8,
      marginTop: 4,
    },
    bulletText: {
      fontSize: 16,
      lineHeight: 24,
      color: activeTheme.text.primary,
      flex: 1,
    },
    exampleBox: {
      backgroundColor: activeTheme.surface,
      padding: 16,
      borderRadius: 8,
      marginVertical: 12,
      borderLeftWidth: 4,
      borderLeftColor: activeTheme.primary,
    },
    exampleTitle: {
      fontSize: 16,
      fontWeight: '600',
      color: activeTheme.primary,
      marginBottom: 8,
    },
    exampleText: {
      fontSize: 15,
      lineHeight: 22,
      color: activeTheme.text.primary,
    },
    warningBox: {
      backgroundColor: activeTheme.warning + '20',
      padding: 16,
      borderRadius: 8,
      marginVertical: 12,
      borderLeftWidth: 4,
      borderLeftColor: activeTheme.warning,
    },
    warningText: {
      fontSize: 15,
      lineHeight: 22,
      color: activeTheme.text.primary,
    },
    buttonContainer: {
      padding: 20,
      borderTopWidth: 1,
      borderTopColor: activeTheme.border,
    },
    actionChips: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      gap: 8,
      marginTop: 12,
    },
    actionChip: {
      backgroundColor: activeTheme.surface,
    },
  });

  return (
    <Portal>
      <Modal
        visible={visible}
        onDismiss={onDismiss}
        contentContainerStyle={styles.modal}
      >
        <Card>
          <View style={styles.header}>
            <Text style={styles.headerTitle}>
              üí° Comprendre les conflits de donn√©es
            </Text>
            <IconButton
              icon="close"
              size={24}
              iconColor={activeTheme.text.onPrimary}
              onPress={onDismiss}
            />
          </View>

          <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
            
            {/* Qu'est-ce qu'un conflit ? */}
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>ü§î Qu'est-ce qu'un conflit ?</Text>
              <Text style={styles.sectionText}>
                Un conflit arrive quand vous modifiez quelque chose dans l'app pendant que vous √™tes hors ligne, 
                et qu'en m√™me temps, quelqu'un d'autre (ou vous sur un autre appareil) modifie la m√™me chose.
              </Text>
              
              <View style={styles.exampleBox}>
                <Text style={styles.exampleTitle}>üì± Exemple concret :</Text>
                <Text style={styles.exampleText}>
                  ‚Ä¢ Vous changez le prix d'un iPhone de 800‚Ç¨ √† 750‚Ç¨ (hors ligne){'\n'}
                  ‚Ä¢ En m√™me temps, votre coll√®gue le marque comme "vendu" (en ligne){'\n'}
                  ‚Ä¢ R√©sultat : l'app ne sait pas quoi faire ! ü§∑‚Äç‚ôÄÔ∏è
                </Text>
              </View>
            </View>

            {/* Types de conflits */}
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>üîÑ Types de conflits courants</Text>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>Modifications simultan√©es :</Text> Deux personnes modifient le m√™me article
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>Suppression vs modification :</Text> L'un supprime, l'autre modifie
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>Articles dupliqu√©s :</Text> M√™me code QR cr√©√© deux fois
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>D√©placements simultan√©s :</Text> Article d√©plac√© vers diff√©rents containers
                </Text>
              </View>
            </View>

            {/* R√©solution automatique */}
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‚ö° R√©solution automatique ("Auto")</Text>
              <Text style={styles.sectionText}>
                L'app essaie de r√©soudre le conflit automatiquement selon des r√®gles simples :
              </Text>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>Suppression gagne toujours :</Text> Si quelqu'un supprime un article, il reste supprim√©
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>La derni√®re modification gagne :</Text> Pour les prix, descriptions, etc.
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  <Text style={{ fontWeight: '600' }}>Fusion intelligente :</Text> Combine les modifications si possible
                </Text>
              </View>

              <View style={styles.warningBox}>
                <Text style={styles.warningText}>
                  ‚ö†Ô∏è <Text style={{ fontWeight: '600' }}>Important :</Text> Certains conflits complexes n√©cessitent votre intervention. 
                  L'app vous demandera alors de choisir manuellement.
                </Text>
              </View>
            </View>

            {/* R√©solution manuelle */}
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>üéØ R√©solution manuelle</Text>
              <Text style={styles.sectionText}>
                Quand l'app ne peut pas d√©cider automatiquement, vous avez 3 choix :
              </Text>

              <View style={styles.actionChips}>
                <Chip style={styles.actionChip} icon="arrow-left">Garder Local</Chip>
                <Chip style={styles.actionChip} icon="arrow-right">Garder Serveur</Chip>
                <Chip style={styles.actionChip} icon="merge">Fusionner</Chip>
              </View>

              <Text style={styles.subTitle}>üîß Option "Fusionner" :</Text>
              <Text style={styles.sectionText}>
                Vous choisissez champ par champ ce que vous voulez garder. 
                Par exemple : garder le prix de votre version, mais la description de l'autre.
              </Text>
            </View>

            {/* Conseils */}
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>üí° Conseils pratiques</Text>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  Utilisez d'abord "Auto" - √ßa marche dans 80% des cas
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  En cas de doute, choisissez "Fusionner" pour voir les d√©tails
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  Les modifications r√©centes sont souvent plus importantes
                </Text>
              </View>
              
              <View style={styles.bulletPoint}>
                <Text style={styles.bullet}>‚Ä¢</Text>
                <Text style={styles.bulletText}>
                  Contactez votre √©quipe en cas de conflit sur des donn√©es importantes
                </Text>
              </View>
            </View>

          </ScrollView>

          <View style={styles.buttonContainer}>
            <Button
              mode="contained"
              onPress={onDismiss}
              icon="check"
            >
              J'ai compris !
            </Button>
          </View>
        </Card>
      </Modal>
    </Portal>
  );
};

export default ConflictHelpModal;